{"version":3,"sources":["../../../src/listeners/commands/messageCommandDenied.ts"],"sourcesContent":["import type { Events, MessageCommandDeniedPayload } from '@sapphire/framework';\nimport { Listener, UserError } from '@sapphire/framework';\n\nexport class UserEvent extends Listener<typeof Events.MessageCommandDenied> {\n\tpublic async run({ context, message: content }: UserError, { message }: MessageCommandDeniedPayload) {\n\t\t// `context: { silent: true }` should make UserError silent:\n\t\t// Use cases for this are for example permissions error when running the `eval` command.\n\t\tif (Reflect.get(Object(context), 'silent')) return;\n\n\t\treturn message.channel.send({ content, allowedMentions: { users: [message.author.id], roles: [] } });\n\t}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA,uBAAoC;AAE7B,MAAM,kBAAkB,0BAA6C;AAAA,EAC3E,MAAa,IAAI,EAAE,SAAS,SAAS,QAAQ,GAAc,EAAE,QAAQ,GAAgC;AAGpG,QAAI,QAAQ,IAAI,OAAO,OAAO,GAAG,QAAQ;AAAG;AAE5C,WAAO,QAAQ,QAAQ,KAAK,EAAE,SAAS,iBAAiB,EAAE,OAAO,CAAC,QAAQ,OAAO,EAAE,GAAG,OAAO,CAAC,EAAE,EAAE,CAAC;AAAA,EACpG;AACD;AARa;","names":[]}